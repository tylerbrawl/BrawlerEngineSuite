// WARNING: This file was auto-generated by the Brawler Shader Compiler. You will incur the
// wrath of God if you dare touch it.

module;
#include <array>
#include "../DxDef.h"

export module Brawler.PSOs.PSODefinition;

import :BC7_TRY_MODE_456;
import :BC7_TRY_MODE_137;
import :BC7_TRY_MODE_02;
import :BC7_ENCODE_BLOCK;

import Brawler.PSOs.PSOID;
import Brawler.RootSignatures.RootSignatureID;
import Util.Engine;
import Brawler.D3D12.RootSignatureDatabase;
import Util.Reflection;
import Brawler.PSOs.PipelineType;

namespace Brawler
{
	namespace PSOs
	{
		template <Brawler::PSOs::PSOID PSOIdentifier>
		struct PSODefinition
		{};

		template <typename PSOStreamType, std::size_t FieldIndex>
		consteval bool IsComputePSOStream()
		{
			if constexpr (std::is_same_v<Util::Reflection::FieldType<PSOStreamType, FieldIndex>, CD3DX12_PIPELINE_STATE_STREAM_CS>)
				return true;

			if constexpr ((FieldIndex + 1) != Util::Reflection::GetFieldCount<PSOStreamType>())
				return IsComputePSOStream<PSOStreamType, (FieldIndex + 1)>();
			else
				return false;
		}
	}
}

export namespace Brawler
{
	namespace PSOs
	{
		template <Brawler::PSOs::PSOID PSOIdentifier>
		using PSOStreamType = PSODefinition<PSOIdentifier>::PSOStreamType;

		template <Brawler::PSOs::PSOID PSOIdentifier>
		consteval Brawler::RootSignatures::RootSignatureID GetRootSignature()
		{
			return PSODefinition<PSOIdentifier>::ROOT_SIGNATURE_ID;
		}

		template <Brawler::PSOs::PSOID PSOIdentifier>
		PSOStreamType<PSOIdentifier> CreatePSODescription()
		{
			// The contents of PSODefinition<PSOIdentifier>::DEFAULT_PSO_VALUE are the compile-time default
			// values of the PSO description serialized as a byte array.
			PSOStreamType<PSOIdentifier> psoDesc{ *(reinterpret_cast<const PSOStreamType<PSOIdentifier>*>(PSODefinition<PSOIdentifier>::DEFAULT_PSO_VALUE.data())) };

			// Resolve the remaining fields of the PSO description which could not be filled out at compile
			// time.
			PSODefinition<PSOIdentifier>::ExecuteRuntimePSOResolution(psoDesc);

			return psoDesc;
		}

		template <Brawler::PSOs::PSOID PSOIdentifier>
		consteval PipelineType GetPipelineType()
		{
			return (IsComputePSOStream<PSOStreamType<PSOIdentifier>, 0>() ? PipelineType::COMPUTE : PipelineType::GRAPHICS);
		}
	}
}